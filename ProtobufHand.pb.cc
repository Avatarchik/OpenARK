// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openarkproto.proto

#include "ProtobufHand.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_openarkproto_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_openarkproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointIJ;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_openarkproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZ;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_openarkproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Hand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_openarkproto_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Point;
}  // namespace protobuf_openarkproto_2eproto
namespace protob {
class HandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hands>
      _instance;
} _Hands_default_instance_;
class HandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hand>
      _instance;
} _Hand_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class PointXYZDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointXYZ>
      _instance;
} _PointXYZ_default_instance_;
class PointIJDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointIJ>
      _instance;
} _PointIJ_default_instance_;
}  // namespace protob
namespace protobuf_openarkproto_2eproto {
static void InitDefaultsHands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protob::_Hands_default_instance_;
    new (ptr) ::protob::Hands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protob::Hands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Hands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHands}, {
      &protobuf_openarkproto_2eproto::scc_info_Hand.base,}};

static void InitDefaultsHand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protob::_Hand_default_instance_;
    new (ptr) ::protob::Hand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protob::Hand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Hand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHand}, {
      &protobuf_openarkproto_2eproto::scc_info_Point.base,}};

static void InitDefaultsPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protob::_Point_default_instance_;
    new (ptr) ::protob::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protob::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPoint}, {
      &protobuf_openarkproto_2eproto::scc_info_PointXYZ.base,
      &protobuf_openarkproto_2eproto::scc_info_PointIJ.base,}};

static void InitDefaultsPointXYZ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protob::_PointXYZ_default_instance_;
    new (ptr) ::protob::PointXYZ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protob::PointXYZ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointXYZ}, {}};

static void InitDefaultsPointIJ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protob::_PointIJ_default_instance_;
    new (ptr) ::protob::PointIJ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protob::PointIJ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointIJ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointIJ}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Hands.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointXYZ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointIJ.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Hands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Hands, hands_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Hand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Hand, fingers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Hand, wrist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Hand, palmcenter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Point, pointxyz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::Point, pointij_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointXYZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointXYZ, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointXYZ, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointXYZ, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointIJ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointIJ, i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protob::PointIJ, j_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protob::Hands)},
  { 6, -1, sizeof(::protob::Hand)},
  { 14, -1, sizeof(::protob::Point)},
  { 21, -1, sizeof(::protob::PointXYZ)},
  { 29, -1, sizeof(::protob::PointIJ)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protob::_Hands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protob::_Hand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protob::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protob::_PointXYZ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protob::_PointIJ_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "openarkproto.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022openarkproto.proto\022\006protob\"$\n\005Hands\022\033\n"
      "\005hands\030\001 \003(\0132\014.protob.Hand\"g\n\004Hand\022\036\n\007fi"
      "ngers\030\001 \003(\0132\r.protob.Point\022\034\n\005wrist\030\002 \003("
      "\0132\r.protob.Point\022!\n\npalmCenter\030\003 \001(\0132\r.p"
      "rotob.Point\"M\n\005Point\022\"\n\010pointXYZ\030\001 \001(\0132\020"
      ".protob.PointXYZ\022 \n\007pointIJ\030\002 \001(\0132\017.prot"
      "ob.PointIJ\"+\n\010PointXYZ\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002"
      " \001(\002\022\t\n\001z\030\003 \001(\002\"\037\n\007PointIJ\022\t\n\001i\030\001 \001(\005\022\t\n"
      "\001j\030\002 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 336);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openarkproto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openarkproto_2eproto
namespace protob {

// ===================================================================

void Hands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hands::kHandsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hands::Hands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_openarkproto_2eproto::scc_info_Hands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protob.Hands)
}
Hands::Hands(const Hands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hands_(from.hands_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protob.Hands)
}

void Hands::SharedCtor() {
}

Hands::~Hands() {
  // @@protoc_insertion_point(destructor:protob.Hands)
  SharedDtor();
}

void Hands::SharedDtor() {
}

void Hands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hands::descriptor() {
  ::protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hands& Hands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_openarkproto_2eproto::scc_info_Hands.base);
  return *internal_default_instance();
}


void Hands::Clear() {
// @@protoc_insertion_point(message_clear_start:protob.Hands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hands_.Clear();
  _internal_metadata_.Clear();
}

bool Hands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protob.Hands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protob.Hand hands = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protob.Hands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protob.Hands)
  return false;
#undef DO_
}

void Hands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protob.Hands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protob.Hand hands = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hands_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->hands(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protob.Hands)
}

::google::protobuf::uint8* Hands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protob.Hands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protob.Hand hands = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hands_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->hands(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protob.Hands)
  return target;
}

size_t Hands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protob.Hands)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protob.Hand hands = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hands_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hands(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protob.Hands)
  GOOGLE_DCHECK_NE(&from, this);
  const Hands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protob.Hands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protob.Hands)
    MergeFrom(*source);
  }
}

void Hands::MergeFrom(const Hands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protob.Hands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hands_.MergeFrom(from.hands_);
}

void Hands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protob.Hands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hands::CopyFrom(const Hands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protob.Hands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hands::IsInitialized() const {
  return true;
}

void Hands::Swap(Hands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hands::InternalSwap(Hands* other) {
  using std::swap;
  CastToBase(&hands_)->InternalSwap(CastToBase(&other->hands_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hands::GetMetadata() const {
  protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hand::InitAsDefaultInstance() {
  ::protob::_Hand_default_instance_._instance.get_mutable()->palmcenter_ = const_cast< ::protob::Point*>(
      ::protob::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hand::kFingersFieldNumber;
const int Hand::kWristFieldNumber;
const int Hand::kPalmCenterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hand::Hand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_openarkproto_2eproto::scc_info_Hand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protob.Hand)
}
Hand::Hand(const Hand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fingers_(from.fingers_),
      wrist_(from.wrist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_palmcenter()) {
    palmcenter_ = new ::protob::Point(*from.palmcenter_);
  } else {
    palmcenter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protob.Hand)
}

void Hand::SharedCtor() {
  palmcenter_ = NULL;
}

Hand::~Hand() {
  // @@protoc_insertion_point(destructor:protob.Hand)
  SharedDtor();
}

void Hand::SharedDtor() {
  if (this != internal_default_instance()) delete palmcenter_;
}

void Hand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hand::descriptor() {
  ::protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hand& Hand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_openarkproto_2eproto::scc_info_Hand.base);
  return *internal_default_instance();
}


void Hand::Clear() {
// @@protoc_insertion_point(message_clear_start:protob.Hand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fingers_.Clear();
  wrist_.Clear();
  if (GetArenaNoVirtual() == NULL && palmcenter_ != NULL) {
    delete palmcenter_;
  }
  palmcenter_ = NULL;
  _internal_metadata_.Clear();
}

bool Hand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protob.Hand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protob.Point fingers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fingers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protob.Point wrist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_wrist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protob.Point palmCenter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_palmcenter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protob.Hand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protob.Hand)
  return false;
#undef DO_
}

void Hand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protob.Hand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protob.Point fingers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fingers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->fingers(static_cast<int>(i)),
      output);
  }

  // repeated .protob.Point wrist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wrist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->wrist(static_cast<int>(i)),
      output);
  }

  // .protob.Point palmCenter = 3;
  if (this->has_palmcenter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_palmcenter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protob.Hand)
}

::google::protobuf::uint8* Hand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protob.Hand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protob.Point fingers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fingers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fingers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protob.Point wrist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wrist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->wrist(static_cast<int>(i)), deterministic, target);
  }

  // .protob.Point palmCenter = 3;
  if (this->has_palmcenter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_palmcenter(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protob.Hand)
  return target;
}

size_t Hand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protob.Hand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protob.Point fingers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fingers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fingers(static_cast<int>(i)));
    }
  }

  // repeated .protob.Point wrist = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->wrist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->wrist(static_cast<int>(i)));
    }
  }

  // .protob.Point palmCenter = 3;
  if (this->has_palmcenter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *palmcenter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protob.Hand)
  GOOGLE_DCHECK_NE(&from, this);
  const Hand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protob.Hand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protob.Hand)
    MergeFrom(*source);
  }
}

void Hand::MergeFrom(const Hand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protob.Hand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fingers_.MergeFrom(from.fingers_);
  wrist_.MergeFrom(from.wrist_);
  if (from.has_palmcenter()) {
    mutable_palmcenter()->::protob::Point::MergeFrom(from.palmcenter());
  }
}

void Hand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protob.Hand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hand::CopyFrom(const Hand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protob.Hand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hand::IsInitialized() const {
  return true;
}

void Hand::Swap(Hand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hand::InternalSwap(Hand* other) {
  using std::swap;
  CastToBase(&fingers_)->InternalSwap(CastToBase(&other->fingers_));
  CastToBase(&wrist_)->InternalSwap(CastToBase(&other->wrist_));
  swap(palmcenter_, other->palmcenter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hand::GetMetadata() const {
  protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
  ::protob::_Point_default_instance_._instance.get_mutable()->pointxyz_ = const_cast< ::protob::PointXYZ*>(
      ::protob::PointXYZ::internal_default_instance());
  ::protob::_Point_default_instance_._instance.get_mutable()->pointij_ = const_cast< ::protob::PointIJ*>(
      ::protob::PointIJ::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kPointXYZFieldNumber;
const int Point::kPointIJFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_openarkproto_2eproto::scc_info_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protob.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pointxyz()) {
    pointxyz_ = new ::protob::PointXYZ(*from.pointxyz_);
  } else {
    pointxyz_ = NULL;
  }
  if (from.has_pointij()) {
    pointij_ = new ::protob::PointIJ(*from.pointij_);
  } else {
    pointij_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protob.Point)
}

void Point::SharedCtor() {
  ::memset(&pointxyz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pointij_) -
      reinterpret_cast<char*>(&pointxyz_)) + sizeof(pointij_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:protob.Point)
  SharedDtor();
}

void Point::SharedDtor() {
  if (this != internal_default_instance()) delete pointxyz_;
  if (this != internal_default_instance()) delete pointij_;
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_openarkproto_2eproto::scc_info_Point.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:protob.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pointxyz_ != NULL) {
    delete pointxyz_;
  }
  pointxyz_ = NULL;
  if (GetArenaNoVirtual() == NULL && pointij_ != NULL) {
    delete pointij_;
  }
  pointij_ = NULL;
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protob.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protob.PointXYZ pointXYZ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointxyz()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protob.PointIJ pointIJ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointij()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protob.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protob.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protob.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protob.PointXYZ pointXYZ = 1;
  if (this->has_pointxyz()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pointxyz(), output);
  }

  // .protob.PointIJ pointIJ = 2;
  if (this->has_pointij()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pointij(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protob.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protob.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protob.PointXYZ pointXYZ = 1;
  if (this->has_pointxyz()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pointxyz(), deterministic, target);
  }

  // .protob.PointIJ pointIJ = 2;
  if (this->has_pointij()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pointij(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protob.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protob.Point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protob.PointXYZ pointXYZ = 1;
  if (this->has_pointxyz()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointxyz_);
  }

  // .protob.PointIJ pointIJ = 2;
  if (this->has_pointij()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointij_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protob.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protob.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protob.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protob.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pointxyz()) {
    mutable_pointxyz()->::protob::PointXYZ::MergeFrom(from.pointxyz());
  }
  if (from.has_pointij()) {
    mutable_pointij()->::protob::PointIJ::MergeFrom(from.pointij());
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protob.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protob.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(pointxyz_, other->pointxyz_);
  swap(pointij_, other->pointij_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointXYZ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointXYZ::kXFieldNumber;
const int PointXYZ::kYFieldNumber;
const int PointXYZ::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointXYZ::PointXYZ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_openarkproto_2eproto::scc_info_PointXYZ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protob.PointXYZ)
}
PointXYZ::PointXYZ(const PointXYZ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:protob.PointXYZ)
}

void PointXYZ::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PointXYZ::~PointXYZ() {
  // @@protoc_insertion_point(destructor:protob.PointXYZ)
  SharedDtor();
}

void PointXYZ::SharedDtor() {
}

void PointXYZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointXYZ::descriptor() {
  ::protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointXYZ& PointXYZ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_openarkproto_2eproto::scc_info_PointXYZ.base);
  return *internal_default_instance();
}


void PointXYZ::Clear() {
// @@protoc_insertion_point(message_clear_start:protob.PointXYZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PointXYZ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protob.PointXYZ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protob.PointXYZ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protob.PointXYZ)
  return false;
#undef DO_
}

void PointXYZ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protob.PointXYZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protob.PointXYZ)
}

::google::protobuf::uint8* PointXYZ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protob.PointXYZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protob.PointXYZ)
  return target;
}

size_t PointXYZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protob.PointXYZ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointXYZ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protob.PointXYZ)
  GOOGLE_DCHECK_NE(&from, this);
  const PointXYZ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointXYZ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protob.PointXYZ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protob.PointXYZ)
    MergeFrom(*source);
  }
}

void PointXYZ::MergeFrom(const PointXYZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protob.PointXYZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PointXYZ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protob.PointXYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointXYZ::CopyFrom(const PointXYZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protob.PointXYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointXYZ::IsInitialized() const {
  return true;
}

void PointXYZ::Swap(PointXYZ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointXYZ::InternalSwap(PointXYZ* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointXYZ::GetMetadata() const {
  protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointIJ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointIJ::kIFieldNumber;
const int PointIJ::kJFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointIJ::PointIJ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_openarkproto_2eproto::scc_info_PointIJ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protob.PointIJ)
}
PointIJ::PointIJ(const PointIJ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&i_, &from.i_,
    static_cast<size_t>(reinterpret_cast<char*>(&j_) -
    reinterpret_cast<char*>(&i_)) + sizeof(j_));
  // @@protoc_insertion_point(copy_constructor:protob.PointIJ)
}

void PointIJ::SharedCtor() {
  ::memset(&i_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&j_) -
      reinterpret_cast<char*>(&i_)) + sizeof(j_));
}

PointIJ::~PointIJ() {
  // @@protoc_insertion_point(destructor:protob.PointIJ)
  SharedDtor();
}

void PointIJ::SharedDtor() {
}

void PointIJ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointIJ::descriptor() {
  ::protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointIJ& PointIJ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_openarkproto_2eproto::scc_info_PointIJ.base);
  return *internal_default_instance();
}


void PointIJ::Clear() {
// @@protoc_insertion_point(message_clear_start:protob.PointIJ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&i_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&j_) -
      reinterpret_cast<char*>(&i_)) + sizeof(j_));
  _internal_metadata_.Clear();
}

bool PointIJ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protob.PointIJ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 i = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 j = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &j_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protob.PointIJ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protob.PointIJ)
  return false;
#undef DO_
}

void PointIJ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protob.PointIJ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 i = 1;
  if (this->i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->i(), output);
  }

  // int32 j = 2;
  if (this->j() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->j(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protob.PointIJ)
}

::google::protobuf::uint8* PointIJ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protob.PointIJ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 i = 1;
  if (this->i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->i(), target);
  }

  // int32 j = 2;
  if (this->j() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->j(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protob.PointIJ)
  return target;
}

size_t PointIJ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protob.PointIJ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 i = 1;
  if (this->i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->i());
  }

  // int32 j = 2;
  if (this->j() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->j());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointIJ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protob.PointIJ)
  GOOGLE_DCHECK_NE(&from, this);
  const PointIJ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointIJ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protob.PointIJ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protob.PointIJ)
    MergeFrom(*source);
  }
}

void PointIJ::MergeFrom(const PointIJ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protob.PointIJ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.i() != 0) {
    set_i(from.i());
  }
  if (from.j() != 0) {
    set_j(from.j());
  }
}

void PointIJ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protob.PointIJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointIJ::CopyFrom(const PointIJ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protob.PointIJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointIJ::IsInitialized() const {
  return true;
}

void PointIJ::Swap(PointIJ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointIJ::InternalSwap(PointIJ* other) {
  using std::swap;
  swap(i_, other->i_);
  swap(j_, other->j_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointIJ::GetMetadata() const {
  protobuf_openarkproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openarkproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protob
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protob::Hands* Arena::CreateMaybeMessage< ::protob::Hands >(Arena* arena) {
  return Arena::CreateInternal< ::protob::Hands >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protob::Hand* Arena::CreateMaybeMessage< ::protob::Hand >(Arena* arena) {
  return Arena::CreateInternal< ::protob::Hand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protob::Point* Arena::CreateMaybeMessage< ::protob::Point >(Arena* arena) {
  return Arena::CreateInternal< ::protob::Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protob::PointXYZ* Arena::CreateMaybeMessage< ::protob::PointXYZ >(Arena* arena) {
  return Arena::CreateInternal< ::protob::PointXYZ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protob::PointIJ* Arena::CreateMaybeMessage< ::protob::PointIJ >(Arena* arena) {
  return Arena::CreateInternal< ::protob::PointIJ >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
